apiVersion: apps/v1
kind: Deployment
metadata:
  name: urlshortener-api
  labels:
    app: urlshortener
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: urlshortener
      tier: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: urlshortener
        tier: backend
    spec:
      containers:
      - name: api
        image: ${ECR_REPOSITORY_URI}:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            secretKeyRef:
              name: urlshortener-secrets
              key: postgres-connection-string
        - name: ConnectionStrings__Redis
          valueFrom:
            secretKeyRef:
              name: urlshortener-secrets
              key: redis-connection-string
        - name: ShortUrlBase
          value: "https://short.url/"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 80
          initialDelaySeconds: 15
          timeoutSeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: urlshortener-api
  labels:
    app: urlshortener
    tier: backend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: urlshortener
    tier: backend
